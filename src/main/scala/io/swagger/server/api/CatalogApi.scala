/**
 * Open Service Broker API
 * The Open Service Broker API defines an HTTP(S) interface between Platforms and Service Brokers.
 *
 * OpenAPI spec version: master - might contain changes that are not yet released
 * Contact: open-service-broker-api@googlegroups.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 */


package io.swagger.server.api

import io.swagger.server.model.Catalog
import io.swagger.server.model.Error

import java.io.File

import org.scalatra.ScalatraServlet
import org.scalatra.swagger._
import org.json4s._
import org.json4s.JsonDSL._
import org.scalatra.json.{ JValueResult, JacksonJsonSupport }
import org.scalatra.servlet.{ FileUploadSupport, MultipartConfig, SizeConstraintExceededException }

import scala.collection.JavaConverters._

class CatalogApi(implicit val swagger: Swagger) extends ScalatraServlet
  with FileUploadSupport
  with JacksonJsonSupport
  with SwaggerSupport {
  protected implicit val jsonFormats: Formats = DefaultFormats

  protected val applicationDescription: String = "CatalogApi"

  before() {
    contentType = formats("json")
    response.headers += ("Access-Control-Allow-Origin" -> "*")
  }
  

  val catalog.getOperation = (apiOperation[Catalog]("catalog.get")
      summary "get the catalog of services that the service broker offers"
      parameters(headerParam[String]("xBrokerAPIVersion").description(""), headerParam[String]("xBrokerAPIOriginatingIdentity").description("").optional, headerParam[String]("xBrokerAPIRequestIdentity").description("").optional)
  )

  get("/v2/catalog",operation(catalog.getOperation)) {
    
    
          val xBrokerAPIVersion = request.getHeader("xBrokerAPIVersion")

    println("xBrokerAPIVersion: " + xBrokerAPIVersion)
    
    
          val xBrokerAPIOriginatingIdentity = request.getHeader("xBrokerAPIOriginatingIdentity")

    println("xBrokerAPIOriginatingIdentity: " + xBrokerAPIOriginatingIdentity)
    
    
          val xBrokerAPIRequestIdentity = request.getHeader("xBrokerAPIRequestIdentity")

    println("xBrokerAPIRequestIdentity: " + xBrokerAPIRequestIdentity)
  }

}
